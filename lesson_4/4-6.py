# 6. Реализовать два небольших скрипта: итератор, генерирующий целые числа, начиная с указанного;
# итератор, повторяющий элементы некоторого списка, определённого заранее. Подсказка: используйте функцию count() и cycle() модуля itertools.
# Обратите внимание, что создаваемый цикл не должен быть бесконечным. Предусмотрите условие его завершения.
# #### Например, в первом задании выводим целые числа, начиная с 3. При достижении числа 10 — завершаем цикл.
# Вторым пунктом необходимо предусмотреть условие, при котором повторение элементов списка прекратится.

# 6.1  итератор, генерирующий целые числа, начиная с указанного

from itertools import count, cycle   # Подключаем Модуль itertools и функцю count и cycle

for el in count(3):     # Запускаем цикл в котором выводим значения от 3
    if el > 10:       # Если превысили 10, то выходим из цикла
        break
    else:
        print(el)       # если не превысили, то печатаем

# 6.2 итератор, повторяющий элементы некоторого списка, определённого заранее

my_list = [17, 'word', 12, 15, ('string'), complex(2,3), 18, 4, 5, 6, 13]  # Заранее определенный список

stop = int(input(f'Введите число, до которого надо вывести элементы списка, но меньше чем {len(my_list)} :'))  # Просим ввести значение на котором надо остановиться, меняем ему тип на int

i = 0
for el in cycle(my_list):
    if i > stop:
        break
    print(f'{i}-ый элемент =', el)
    i += 1

# Я не уверен, что правильно понял второе задание
