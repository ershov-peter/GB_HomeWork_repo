# 2. Реализовать проект расчёта суммарного расхода ткани на производство одежды.
# Основная сущность (класс) этого проекта — одежда, которая может иметь определённое название.
# К типам одежды в этом проекте относятся пальто и костюм.
# У этих типов одежды существуют параметры: размер (для пальто) и рост (для костюма).
# Это могут быть обычные числа: V и H, соответственно.
# Для определения расхода ткани по каждому типу одежды использовать формулы: для пальто (V/6.5 + 0.5), для костюма (2*H + 0.3).
# Проверить работу этих методов на реальных данных.
# Реализовать общий подсчет расхода ткани.
# Проверить на практике полученные на этом уроке знания: реализовать абстрактные классы для основных классов проекта,
# проверить на практике работу декоратора @property.

from abc import ABC, abstractmethod

# асбстраткный класс
class Wear(ABC):
    def __init__(self, var):  # атрибут название, но по условию задачи он не испольуется, поэтому будет один атрибут для размера и роста
        self.var = var

    # декоратр и абстрактный метод
    @property
    @abstractmethod
    def intake(self):   # пропускаем т.к. ничего про него не знаем
        pass

    # Перегружаем метод __add___ для рассчета общего расхода ткани
    def __add__(self, other):
        return self.intake + other.intake


class Coat(Wear):
    @property
    def intake(self):
        result = round(self.var / 6.5 + 0.5, 3)
        return result

class Suit(Wear):
    @property
    def intake(self):
        result = round((2 * self.var + 0.3) / 100, 3)       # в формуле в условии задачи похоже что-то потерялось, в разборе ДЗ было /100, а в условии его нет
        return result


coat_1 = Coat(int(input('Введите размер пальто ')))
suit_1 = Suit(int(input('Введите рост для костюма ')))

# Смотрим работу декоратра
print(coat_1.intake)
print(suit_1.intake)

# Смотрим общий подсчет расхода ткани
print(coat_1 + suit_1)



